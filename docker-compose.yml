version: '3.4'

services:
  ##
  # Web server container
  #
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/:/etc/nginx/
      - ./logs/nginx/:/logs/
      - http:/srv/http/
      - letsencrypt:/etc/letsencrypt/
      - letsencrypt-data:/etc/letsencrypt-data/
      - nextcloud:/srv/nextcloud:ro
    links:
      - registry
      - rslsync
      - trivial
      - bitwarden
      - nextcloud
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    restart: always

  ##
  # Let's Encrypt container
  #
  certbot:
    build: certbot
    volumes:
      - ./certbot/certbot.sh:/certbot.sh
      - letsencrypt:/etc/letsencrypt/
      - letsencrypt-data:/etc/letsencrypt-data/
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - nginx
    restart: always

  ##
  # Resilio Sync container
  #
  rslsync:
    image: resilio/sync
    volumes:
      - rslsync:/mnt/sync/
    ports:
      - "127.0.0.1:8888:8888"
      - "0.0.0.0:55555:55555"
    restart: always

  ##
  # Database container
  #
  postgres:
    image: postgres:12
    volumes:
      - postgres:/var/lib/postgresql/data/
    ports:
      - "127.0.0.1:5432:5432"
    restart: always

  ##
  # Container registry
  #
  registry:
    image: registry:2
    volumes:
      - registry:/var/lib/registry
    ports:
      - "127.0.0.1:5000:5000"
    restart: always

  ##
  # Trivial
  #
  trivial:
    image: registry.dejonckhee.re/trivial
    volumes:
      - ./logs/trivial/:/app/log/
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - postgres
    environment:
      - SECRET_KEY_BASE=mybase
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=trivial
      - POSTGRES_USER=trivial
      - POSTGRES_PASS=trivial
    restart: always

  ##
  # Bitwarden Server
  #
  bitwarden:
    image: bitwardenrs/server-postgresql:1.13.1
    volumes:
      - bitwarden:/data
    depends_on:
      - postgres
    environment:
      WEBSOCKET_ENABLED: "true"
      SIGNUPS_ALLOWED: "false"
      DATABASE_URL: "postgresql://bitwarden:bitwarden@postgres/bitwarden"
      ENABLE_DW_WAL: "false"
    restart: always

  ##
  # Redis
  #
  redis:
    image: redis:alpine
    volumes:
      - redis:/data
    restart: always

  ##
  # NextCloud
  #
  nextcloud:
    build: nextcloud
    depends_on:
      - postgres
      - redis
    volumes:
      - nextcloud:/var/www/html
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=nextcloud
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    restart: always

  torrents:
    image: linuxserver/qbittorrent
    volumes:
      - ./qbittorrent:/config
      - torrents:/downloads
    ports:
      - "0.0.0.0:6881:6881"
      - "0.0.0.0:6881:6881/udp"
      - "127.0.0.1:8080:8080"
    restart: always

  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    volumes:
      - wireguard:/config
      - /lib/modules:/lib/modules
    ports:
      - "0.0.0.0:51820:51820/udp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.conf.all.src_valid_mark: 1
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Berlin
      SERVERURL: dejonckhee.re
      PEERS: 5
    restart: always

volumes:
  # Let's Encrypt certificates
  letsencrypt:
  # Let's Encrypt challenges
  letsencrypt-data:
  # Resilio Sync data
  rslsync:
  # Database
  postgres:
  # Docker registry data
  registry:
  # Bitwarden data
  bitwarden:
  # Redis data
  redis:
  # Nextcloud data
  nextcloud:
  # Static HTTP data
  http:
  # Torrents
  torrents:
  # WireGuard
  wireguard:
