version: '3.4'

services:
  ##
  # Web server container
  #
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/:/etc/nginx/
      - ./logs/nginx/:/logs/
      - /srv/http/:/srv/http/
      - letsencrypt:/etc/letsencrypt/
      - letsencrypt-data:/etc/letsencrypt-data/
    links:
      - registry
      - rslsync
      - trivial
      - deluge-web
      - bitwarden
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    restart: always

  ##
  # Let's Encrypt container
  #
  certbot:
    build: certbot
    volumes:
      - ./certbot/certbot.sh:/certbot.sh
      - letsencrypt:/etc/letsencrypt/
      - letsencrypt-data:/etc/letsencrypt-data/
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - nginx
    restart: always

  ##
  # Resilio Sync container
  #
  rslsync:
    image: resilio/sync
    volumes:
      - /srv/sync/:/mnt/sync/
    ports:
      - "127.0.0.1:8888:8888"
      - "0.0.0.0:55555:55555"
    restart: always

  ##
  # Database container
  #
  postgres:
    image: postgres:12
    volumes:
      - postgres:/var/lib/postgresql/data/
    ports:
      - "127.0.0.1:5432:5432"
    restart: always

  ##
  # Container registry
  #
  registry:
    image: registry:2
    volumes:
      - registry:/var/lib/registry
    ports:
      - "127.0.0.1:5000:5000"
    restart: always

  ##
  # Trivial
  #
  trivial:
    image: registry.dejonckhee.re/trivial
    volumes:
      - ./logs/trivial/:/app/log/
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - postgres
    environment:
      - SECRET_KEY_BASE=mybase
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=trivial
      - POSTGRES_USER=trivial
      - POSTGRES_PASS=trivial
    restart: always

  ##
  # Deluge server
  #
  deluge:
    build: deluge
    command: deluged -d -c /config -l /logs/deluged.log
    volumes:
      - ./logs/deluge/:/logs
      - ./deluge/config/:/config
      - /srv/torrents/unfinished/:/data/unfinished
      - /data/torrents/:/data/finished/
    ports:
      - "0.0.0.0:58846:58846"
      - "0.0.0.0:58946:58946"
      - "0.0.0.0:58946:58946/udp"
    restart: always

  ##
  # Deluge Web UI
  #
  deluge-web:
    build: deluge
    command: deluge-web -d -c /config -l /logs/deluge-web.log
    volumes:
      - ./logs/deluge/:/logs
      - ./deluge/config:/config
    ports:
      - "127.0.0.1:8112:8112"
    links:
      - deluge
    restart: always

  ##
  # Bitwarden Server
  #
  bitwarden:
    image: bitwardenrs/server-postgresql:1.13.1
    volumes:
      - bitwarden:/data
    depends_on:
      - postgres
    environment:
      WEBSOCKET_ENABLED: "true"
      SIGNUPS_ALLOWED: "false"
      DATABASE_URL: "postgresql://bitwarden:bitwarden@postgres/bitwarden"
      ENABLE_DW_WAL: "false"
    restart: always

  ##
  # Redis
  #
  redis:
    image: redis:alpine
    volumes:
      - redis:/data
    restart: always

  ##
  # Watzner
  #
  watzner_clock:
    image: registry.dejonckhee.re/watzner:v0.3.2
    command: bundle exec clockwork lib/clock.rb
    volumes:
      - ./logs/watzner/:/app/log/
    depends_on:
      - postgres
    env_file:
      - .env.production
    restart: always

  watzner_sidekiq:
    image: registry.dejonckhee.re/watzner:v0.3.2
    command: bundle exec sidekiq
    volumes:
      - ./logs/watzner/:/app/log/
    depends_on:
      - redis
      - postgres
    links:
      - redis
    env_file:
      - .env.production
    restart: always

volumes:
  # Let's Encrypt certificates
  letsencrypt:
  # Let's Encrypt challenges
  letsencrypt-data:
  # Database
  postgres:
  # Docker registry data
  registry:
  # Bitwarden data
  bitwarden:
  # Redis data
  redis:
