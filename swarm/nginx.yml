version: "3.8"

services:
  ##
  # HTTP server
  #
  nginx:
    image: nginx:alpine
    volumes:
      - "/mnt/default/http/:/srv/http/"
    networks:
      - proxy
    deploy:
      placement:
        constraints:
          - node.hostname == web
      restart_policy:
        condition: on-failure
      labels:
        traefik.enable: "true"
        traefik.http.middlewares.nginx-tls.redirectscheme.scheme: "https"

        traefik.http.routers.nginx.rule: "Host(`web.cloud.dejonckhee.re`)"
        traefik.http.routers.nginx.entrypoints: "web"
        traefik.http.routers.nginx.middlewares: "nginx-tls"

        traefik.http.routers.nginx-tls.rule: "Host(`web.cloud.dejonckhee.re`)"
        traefik.http.routers.nginx-tls.entrypoints: "websecure"
        traefik.http.routers.nginx-tls.tls: "true"
        traefik.http.routers.nginx-tls.domains[0].main: "web.cloud.dejonckhee.re"
        traefik.http.routers.nginx-tls.domains[0].sans: "*.web.cloud.dejonckhee.re"
        traefik.http.routers.nginx-tls.tls.certresolver: "letsencrypt"

        traefik.http.services.nginx.loadbalancer.server.port: "80"
        traefik.docker.network: "traefik_proxy"
    configs:
      - source: nginx_config_6
        target: /etc/nginx/nginx.conf

networks:
  proxy:
    external: true
    name: "traefik_proxy"

configs:
  nginx_config_6:
    file: nginx.conf
